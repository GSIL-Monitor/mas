spring:
  application:
    name: letv-mas-manager
    index: ${eureka.instance.instance-id}
  #zipkin:
      #base-url: ${TRACE_SERVER_URL:http://127.0.0.1:9001}
  #sleuth:
    #sampler:
      #percentage: 1.0
  cloud:
    # 消息总线
    stream:
      kafka:
        binder:
          zkNodes: ${ZK_NODES:zk2101i.test.db.lecloud.com:2101/kafka/kafka9101}
          brokers: ${KAFKA_BROKERS:k9101i.test.db.lecloud.com:9101}
          configuration:
            security:
              protocol: SASL_PLAINTEXT
            sasl:
              mechanism: PLAIN
          jaas:
            loginModule: org.apache.kafka.common.security.plain.PlainLoginModule
            options:
              username: tvvideo
              password: tvvideo-secret
    bus:
      destination: tvvideo.springcloud.config
      enabled: true
    eureka:
      watcher:
        enabled: true
server:
  port: ${EUREKA_SERVER_PORT:8011}

eureka:
  environment: ${spring.profiles.active}
  instance:
#    hostname: localhost
#    hostname: ${spring.application.name}-${server.port}
    # 全网服务实例唯一标识
    instance-id: ${EUREKA_SERVER_IP:127.0.0.1}:${server.port}
    # 服务实例的meta数据键值对集合，可由注册中心进行服务实例间传递
    metadata-map:
      # [HA-P配置]-当前服务实例的zone
      zone: ${EUREKA_SERVER_ZONE:sjs-1}
      #config bus refresh index
      index: ${spring.application.index:127.0.0.1}
      #config bus refresh profiles
      profiles: ${spring.profiles.active}
    # 开启ip，默认为false＝》hostname
    prefer-ip-address: true
    ip-address: ${EUREKA_SERVER_IP:127.0.0.1}
    # [服务续约]-心跳检查之服务失效时间，默认为90s，这个配置一般为lease-renewal-interval-in-seconds的三倍！eureka server的bug，失效时间为2倍，因此设置预想失效时间的1/2
    lease-expiration-duration-in-seconds: 8
    # [服务续约]-服务续约任务调用的间隔时间，默认为30s
    lease-renewal-interval-in-seconds: 5
    # [服务监控]-当前实例的服务信息地址
    status-page-url: http://${EUREKA_SERVER_IP:127.0.0.1}:${server.port}/info
    # [服务监控]-当前实例的服务健康状态地址
    health-check-url: http://${EUREKA_SERVER_IP:127.0.0.1}:${server.port}/health
  client:
    # [HA-P配置]-当前服务实例的region
    region: ${EUREKA_SERVER_REGION:cn-bj}
    # [HA-P配置]-开启当前服务实例优先发现同zone的注册中心，默认为true
    prefer-same-zone-eureka: true
    # [服务注册]-允许当前服务实例注册，默认为true
    register-with-eureka: true
    # [服务续约]-允许当前服务实例获取注册信息，默认为true
    fetch-registry: true
    # [HA配置]-可用zone内注册中心地址列表
    #availability-zones:
      #cn-bj: ${eureka.instance.metadata-map.zone},sjs-1,dx-1
    service-url:
      #sjs-1: http://letvMasManager:admin20180605@10.129.29.86:8015/eureka,http://letvMasManager:admin20180605@10.129.29.90:8015/eureka
      #dx-1: http://letvMasManager:admin20180605@10.112.34.124:8015/eureka,http://letvMasManager:admin20180605@10.112.34.127:8015/eureka
      #defaultZone: ''
      defaultZone: ${EUREKA_SERVER_LIST:http://letvMasManager:admin20180605@10.129.29.86:8015/eureka}
    # [服务续约]-当前服务实例更新注册服务缓存清单的更新间隔时间，默认为30s，一般和lease-renewal-interval-in-seconds保持一致！
    registry-fetch-interval-seconds: 5
    # [服务监控]-开启健康检查，只能在application.yml中设置！
    healthcheck:
      enabled: true
    # 注册时会try3个注册地址，3 不能改变，均失败后，后台定时会继续注册，retryableClientQuarantineRefreshPercentage源码为0.66，这个是尝试注册的比例。
    # 调整为1，继续注册时会跳过之前注册失败的地址。
    # 详见源码RetryableEurekaHttpClient.getHostCandidates
    transport:
      retryable-client-quarantine-refresh-percentage: 1
    #从config里取eureka-server-lists的定时任务的时间 秒（5*60）
    #eureka-service-url-poll-interval-seconds: 10（bus发出refrush后会重新new client,非eureka原本机制，springcloud实现）
    #定时从config取instance的ip hostname lease-expiration-duration-in-seconds lease-renewal-interval-in-seconds 信息的时间秒 默认为30秒，发现不一样时执行注册
    #instance-info-replication-interval-seconds: 10（bus发出refrush后会重新new client,非eureka原本机制，springcloud实现）

    #自定义的参数，为了运行时修复eureka server list
    service-name: letv-mas-manager
    service-user: letvMasManager
    service-passwd: admin20180605
    #查找eureka server url 时去掉自己，如果不配置则用ip-address+server.port
    #local: ${EUREKA_SERVER_IP:127.0.0.1}:${server.port}

  server:
    # 允许自我保护模式，默认开启，保证注册中心出现网络分区故障时不再删除服务注册表信息
    enable-self-preservation: true

    # 主动清理租约过期定时任务执行频率，默认60s
    eviction-interval-timer-in-ms: 3000

    # 刷新readCacheMap的时间，默认为30 * 1000（30s），client读取的是readCacheMap，这个时间决定多久会把readWriteCacheMap的缓存更新到readCacheMap中
    response-cache-update-interval-ms: 3000

    # 缓存readWriteCacheMap失效时间，默认为180s，这个只有在这个时间过去后缓存才会失效，失效前不会更新，过期后从registry重新读取注册服务信息，registry为ConcurrentHashMap
    # 如启用了evictio（主动清理租约过期定时任务），可忽略这个配置
    #response-cache-auto-expiration-in-seconds: 90

    #不使用readCacheMap，直接走readWriteCacheMap读取
    use-read-only-response-cache: true

    #不开启分批过期，如果过期一次全部下线
    #renewal-percent-threshold: 0

    #server启动时会从其他节点同步过来所有的applications的信息，如果同步失败，sleep registry-sync-retry-wait-ms（默认30 * 1000）后再接着同步，共尝试numberRegistrySyncRetries(默认5)次
    registry-sync-retry-wait-ms: 500

    #从config中获取相邻节点peers的时间间隔为peerEurekaNodesUpdateIntervalMs 默认值：10 * 60 * 1000
    peer-eureka-nodes-update-interval-ms: 30000

    #如果开启了保护模式，默认15*60*1000会重新计算numberOfRenewsPerMinThreshold值
    renewal-threshold-update-interval-ms: 300000
info:
  app:
    name: "@project.artifactId@"
    encoding: '@project.build.sourceEncoding@'
    java:
      source: '@java.version@'
      target: '@java.version@'

security:
  basic:
    # 启用基本身份认证
    enabled: true
  user:
    name: letvMasManager
    password: admin20180605
    role: USER

management:
  security:
    enabled: false
#    role: TODO

endpoints:
  refresh:
    enabled: true
    # 安全验证
    sensitive: false
  shutdown:
    enabled: true
    # 安全验证
    sensitive: false
logging:
  level:
    root: 'info'
  file: /letv/logs/mas/manager/manager.log
  max-size: '100M'
  max-history: 3
